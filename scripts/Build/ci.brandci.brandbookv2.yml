trigger:
- master
- develop

- release/*
- hotfix/*

- feature/*
- bugfix/*

- architecture/*

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

# Solution
- task: NuGetToolInstaller@0
  displayName: 'Initialize NuGet'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
  displayName: 'Install NuGet Packages'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  displayName: 'Build Application'
# ./Solution

# Frontend Packaging / Bundling
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'BrandBook.Web.Frontend'
  displayName: 'Frontend-Bundling: npm install'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'BrandBook.Web.Frontend'
    customCommand: 'run build-prod'
  displayName: 'Frontend-Bundling: npm run build-prod'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/BrandBook.Web.Frontend/dist'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Bundles'
  displayName: 'Frontend-Bundling: Copy Bundle'
# ./Frontend Packaging / Bundling

# ClientApplication
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'BrandBook.Web.Application'
  displayName: 'Application-Bundling: npm install'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'BrandBook.Web.Application'
    customCommand: 'run build-prod'
  displayName: 'Application-Bundling: npm run build-prod'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/BrandBook.Web.Application/dist'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Bundles/application.bundle'
  displayName: 'Application-Bundling: Copy Application Bundles'
# ./ClientApplication

# Scripts-Folder
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/scripts'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/scripts'
  displayName: 'Copy Scripts Folder'
# ./Scripts

# Unit Tests
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  displayName: 'UnitTests Application'
# ./Unit Tests

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
  displayName: 'Publish Build Artifacts'